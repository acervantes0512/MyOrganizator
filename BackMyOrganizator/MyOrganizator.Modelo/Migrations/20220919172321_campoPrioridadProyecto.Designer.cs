// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyOrganizator.Modelo.Tables;

namespace MyOrganizator.Modelo.Migrations
{
    [DbContext(typeof(TimeOrganizatorContext))]
    [Migration("20220919172321_campoPrioridadProyecto")]
    partial class campoPrioridadProyecto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.AsignacionProyecto", b =>
                {
                    b.Property<int>("AsignacionProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AsignacionTipoProyectoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("Porcentaje")
                        .HasColumnType("int");

                    b.HasKey("AsignacionProyectoId");

                    b.HasIndex("AsignacionTipoProyectoId");

                    b.ToTable("AsignacionProyectos");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.AsignacionTipoProyecto", b =>
                {
                    b.Property<int>("AsignacionTipoProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("Porcentaje")
                        .HasColumnType("int");

                    b.Property<int>("TipoProyectoId")
                        .HasColumnType("int");

                    b.HasKey("AsignacionTipoProyectoId");

                    b.HasIndex("TipoProyectoId");

                    b.ToTable("AsignacionTipoProyectos");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.PlanActividad", b =>
                {
                    b.Property<int>("PlanActividadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuracionMinutos")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdenEjecucion")
                        .HasColumnType("int");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoActividadId")
                        .HasColumnType("int");

                    b.Property<int>("TipoTiempoId")
                        .HasColumnType("int");

                    b.HasKey("PlanActividadId");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("TipoActividadId");

                    b.HasIndex("TipoTiempoId");

                    b.ToTable("PlanActividads");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.Proyecto", b =>
                {
                    b.Property<int>("ProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AsignacionProyectoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuracionMinutos")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Etiqueta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Prioridad")
                        .HasColumnType("int");

                    b.Property<int>("TipoProyectoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ProyectoId");

                    b.HasIndex("AsignacionProyectoId");

                    b.HasIndex("TipoProyectoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreRol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.TiempoReal", b =>
                {
                    b.Property<int>("TiempoRealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DuracionMinutos")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlanActividadId")
                        .HasColumnType("int");

                    b.HasKey("TiempoRealId");

                    b.HasIndex("PlanActividadId");

                    b.ToTable("TiempoReals");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.TipoActividad", b =>
                {
                    b.Property<int>("TipoActividadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoProyectoId")
                        .HasColumnType("int");

                    b.HasKey("TipoActividadId");

                    b.HasIndex("TipoProyectoId");

                    b.ToTable("TipoActividads");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.TipoProyecto", b =>
                {
                    b.Property<int>("TipoProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("TipoProyectoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TipoProyectos");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.TipoTiempo", b =>
                {
                    b.Property<int>("TipoTiempoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoTiempoId");

                    b.ToTable("TipoTiempos");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.AsignacionProyecto", b =>
                {
                    b.HasOne("MyOrganizator.Modelo.Tables.AsignacionTipoProyecto", "AsignacionTipoProyecto")
                        .WithMany("AsignacionesProyecto")
                        .HasForeignKey("AsignacionTipoProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AsignacionTipoProyecto");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.AsignacionTipoProyecto", b =>
                {
                    b.HasOne("MyOrganizator.Modelo.Tables.TipoProyecto", "TipoProyecto")
                        .WithMany("AsignacionesTipoProyecto")
                        .HasForeignKey("TipoProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoProyecto");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.PlanActividad", b =>
                {
                    b.HasOne("MyOrganizator.Modelo.Tables.Proyecto", "Proyecto")
                        .WithMany("PlanesActividad")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyOrganizator.Modelo.Tables.TipoActividad", "TipoActividad")
                        .WithMany("PlanesActividad")
                        .HasForeignKey("TipoActividadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyOrganizator.Modelo.Tables.TipoTiempo", "TipoTiempo")
                        .WithMany("PlanesActividad")
                        .HasForeignKey("TipoTiempoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("TipoActividad");

                    b.Navigation("TipoTiempo");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.Proyecto", b =>
                {
                    b.HasOne("MyOrganizator.Modelo.Tables.AsignacionProyecto", "AsignacionProyecto")
                        .WithMany("Proyectos")
                        .HasForeignKey("AsignacionProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyOrganizator.Modelo.Tables.TipoProyecto", "TipoProyecto")
                        .WithMany("Proyectos")
                        .HasForeignKey("TipoProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyOrganizator.Modelo.Tables.Usuario", "Usuario")
                        .WithMany("Proyectos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AsignacionProyecto");

                    b.Navigation("TipoProyecto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.TiempoReal", b =>
                {
                    b.HasOne("MyOrganizator.Modelo.Tables.PlanActividad", "PlanActividad")
                        .WithMany("TiemposReales")
                        .HasForeignKey("PlanActividadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanActividad");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.TipoActividad", b =>
                {
                    b.HasOne("MyOrganizator.Modelo.Tables.TipoProyecto", "TipoProyecto")
                        .WithMany("TiposActividad")
                        .HasForeignKey("TipoProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoProyecto");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.TipoProyecto", b =>
                {
                    b.HasOne("MyOrganizator.Modelo.Tables.Usuario", "Usuario")
                        .WithMany("TiposProyecto")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.Usuario", b =>
                {
                    b.HasOne("MyOrganizator.Modelo.Tables.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.AsignacionProyecto", b =>
                {
                    b.Navigation("Proyectos");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.AsignacionTipoProyecto", b =>
                {
                    b.Navigation("AsignacionesProyecto");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.PlanActividad", b =>
                {
                    b.Navigation("TiemposReales");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.Proyecto", b =>
                {
                    b.Navigation("PlanesActividad");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.TipoActividad", b =>
                {
                    b.Navigation("PlanesActividad");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.TipoProyecto", b =>
                {
                    b.Navigation("AsignacionesTipoProyecto");

                    b.Navigation("Proyectos");

                    b.Navigation("TiposActividad");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.TipoTiempo", b =>
                {
                    b.Navigation("PlanesActividad");
                });

            modelBuilder.Entity("MyOrganizator.Modelo.Tables.Usuario", b =>
                {
                    b.Navigation("Proyectos");

                    b.Navigation("TiposProyecto");
                });
#pragma warning restore 612, 618
        }
    }
}
